import config #–ö–æ–Ω—Ñ–∏–Ω—É—Ä–∞—Ü–∏—è –¥–ª—è Telegram Bot
import requests # –ú–æ–¥—É–ª—å –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ URL
from bs4 import BeautifulSoup  as BS # –ú–æ–¥—É–ª—å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å HTML
import time # –ú–æ–¥—É–ª—å –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø—Ä–æ–≥—Ä–∞–º–º—ã
import telebot
import emoji #–°–º–∞–π–ª–∏–∫–∏ 
from telebot import types

# –ü–∞—Ä—Å–µ—Ä 
Main = "https://kaliningrad.bankiros.ru/currency"    
    # –ó–∞–≥–æ–ª–æ–≤–∫–∏ –¥–ª—è –ø–µ—Ä–µ–¥–∞—á–∏ –≤–º–µ—Å—Ç–µ —Å URL
headers = {'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.114 Safari/537.36'}
#######
# –ò—â–µ–º –¥–æ–ª–ª–∞—Ä –ø–æ–∫—É–ø–∫–∞ 
current_alls = requests.get(Main ,headers=headers)
####################
soup_current_all = BS(current_alls.content,'html.parser')


# –§–∏–Ω–∞–ª—å–Ω—ã–π –ü–∞—Ä—Å–∏–Ω–≥ 
conver_soup_dollars = soup_current_all.find_all("span",{"class":"conv-val triger-usd"})
conver_soup_dollars_sell = soup_current_all.find_all("span",{"class":"conv-val triger-usd"})
# –î–ª—è —É–¥–æ–±—Å—Ç–≤–∞ 

USD_BUY = conver_soup_dollars[0].text
USD_SELL = conver_soup_dollars[1].text
USD_NEXT_DAY = conver_soup_dollars[3].text

print(USD_BUY,USD_SELL,USD_NEXT_DAY)

# –ù–∞—á–∞–ª–æ 
bot = telebot.TeleBot(config.token)
@bot.message_handler(commands=['start'])
def get_user_info(message):
    # –í—ã–≤–æ–¥ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –®–∞–≥ 1 
    markup_inline =types.InlineKeyboardMarkup()
    btn_inline_1 = types.InlineKeyboardButton(text="‚úÖ–õ—É—á—à–∏–π –∫—É—Ä—Å –¥–ª—è –æ–±–º–µ–Ω–∞ –≤–∞–ª—é—Ç—ã ",callback_data = 'current')
    btn_inline_2 = types.InlineKeyboardButton(text="–ö—É—Ä—Å –¶–ë",callback_data = 'cbank')
    btn_inline_3 = types.InlineKeyboardButton(text="–ö—É—Ä—Å –ë–∏—Ä–∂—ã ",callback_data = 'no')
    markup_inline.add(btn_inline_1,btn_inline_2)
    bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Çüëãüèª —è –±–æ—Ç , –ø–æ–∫–∞–∑—ã–≤–∞—é –ª—É—á—à–∏–π –∫—É—Ä—Å –≤–∞–ª—é—Ç—ã –≤ –ö–∞–ª–∏–Ω–∏–Ω–≥—Ä–∞–¥–µ \n  –ö—É—Ä—Å –¶–ë \n  –ö—É—Ä—Å –ë–∏—Ä–∂–∞ \n  " ,reply_markup = markup_inline)


@bot.callback_query_handler(func=lambda call:True)
def answer(call):
    if call.data== 'current':
        # –í—ã–≤–æ–¥ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –®–∞–≥ 2 
        markup_inline_step_2 =types.InlineKeyboardMarkup()
        btn_inline_1_step_2 = types.InlineKeyboardButton(text="üá∫üá∏ –î–æ–ª–ª–∞—Ä ",callback_data = 'dollars')
        btn_inline_2_step_2 = types.InlineKeyboardButton(text="üá™üá∫ –ï–≤—Ä–æ",callback_data = 'euro')
        btn_inline_3_step_2 = types.InlineKeyboardButton(text="üáµüá± –ó–ª–æ—Ç—ã",callback_data = 'zlt')
        markup_inline_step_2.add(btn_inline_1_step_2,btn_inline_2_step_2,btn_inline_3_step_2)
        msg = bot.send_message(call.message.chat.id," –í—ã–±–µ—Ä–µ—Ç–µ –Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å  ",reply_markup = markup_inline_step_2)
    
    # –í—ã–≤–æ–¥ dollars –®–∞–≥ 3 
    elif call.data =='dollars':
        bot.send_message(call.message.chat.id,"üá∫üá∏ –ü–æ–∫—É–ø–∫–∞|–ü—Ä–æ–¥–∞–∂–∞ \n \n ‚úÖ  {0}  |  {1} \n \n üèû  –ö—É—Ä—Å –Ω–∞ —Å–ª–µ–¥ –¥–µ–Ω—å {2} ".format(USD_BUY,USD_SELL,USD_NEXT_DAY ))

    # –í—ã–≤–æ–¥ euro –®–∞–≥ 3 
    elif call.data =='euro':
        bot.send_message(call.message.chat.id,"–ü—Ä–∏–≤–µ—Ç –µ–≤—Ä–æ ")

    # –í—ã–≤–æ–¥ –∑–ª–æ—Ç—ã –®–∞–≥ 3 
    elif call.data =='zlt':
        bot.send_message(call.message.chat.id,"–ü—Ä–∏–≤–µ—Ç –∑–ª–æ—Ç—ã   ",'''reply_markup=markup_reply''')

    # –ß—Ç–æ —Ç–æ –¥—Ä—É–≥–æ–µ –®–∞–≥ 3 
    else:
        bot.send_message(call.message.chat.id,"–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤—ã–±–µ—Ä–µ—Ç–µ  —Ä–∞–∑–¥–µ–ª –Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ ",'''reply_markup=markup_reply''')
    
    # bot.register_next_step_handler(msg )








bot.polling()